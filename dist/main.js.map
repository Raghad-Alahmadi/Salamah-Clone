{
  "version": 3,
  "sources": ["../src/components/InputField.ts", "../src/components/Button.ts", "../src/components/Validation.ts", "../src/components/API.ts", "../src/components/Form.ts", "../src/components/Header.ts", "../src/main.ts"],
  "sourcesContent": ["export class InputField {\r\n    constructor(private id: string, private type: string, private placeholder: string) {}\r\n\r\n    public render(): HTMLElement {\r\n        const input = document.createElement(\"input\");\r\n        input.id = this.id;\r\n        input.type = this.type;\r\n        input.placeholder = this.placeholder;\r\n        input.classList.add(\"input-field\");\r\n        return input;\r\n    }\r\n}\r\n", "export class Button {\r\n    constructor(private label: string, private onClick: (event: Event) => void) {}\r\n\r\n    public render(): HTMLButtonElement {\r\n        const button = document.createElement(\"button\");\r\n        button.innerText = this.label;\r\n        button.addEventListener(\"click\", this.onClick);\r\n        button.classList.add(\"btn\");\r\n        return button;\r\n    }\r\n}\r\n", "export class Validation {\r\n    static validateForm(form: HTMLFormElement): boolean {\r\n        const inputs = form.querySelectorAll(\"input\");\r\n        let valid = true;\r\n\r\n        inputs.forEach(input => {\r\n            if (!input.value.trim()) {\r\n                valid = false;\r\n                input.classList.add(\"error\");\r\n            } else {\r\n                input.classList.remove(\"error\");\r\n            }\r\n        });\r\n\r\n        return valid;\r\n    }\r\n}\r\n", "export class API {\r\n    static async fetchCompanyData(): Promise<any> {\r\n        try {\r\n            const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n            if (!response.ok) throw new Error(\"Failed to fetch data\");\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n", "import { InputField } from \"./InputField\";\r\nimport { Button } from \"./Button\";\r\nimport { Validation } from \"./Validation\";\r\nimport { API } from \"./API\";\r\n\r\nexport class Form {\r\n    private formElement: HTMLFormElement;\r\n\r\n    constructor() {\r\n        this.formElement = document.createElement(\"form\");\r\n        this.formElement.className = \"bg-white p-6 rounded shadow-md max-w-lg mx-auto\";\r\n        this.renderForm();\r\n    }\r\n\r\n    private renderForm() {\r\n        const fields = [\r\n            { type: \"text\", id: \"companyName\", placeholder: \"Company Name\" },\r\n            { type: \"text\", id: \"commercialReg\", placeholder: \"Commercial Registration Number\" },\r\n            { type: \"email\", id: \"email\", placeholder: \"Email\" },\r\n            { type: \"tel\", id: \"phone\", placeholder: \"Phone Number\" },\r\n            { type: \"password\", id: \"password\", placeholder: \"Password\" },\r\n            { type: \"password\", id: \"confirmPassword\", placeholder: \"Confirm Password\" }\r\n        ];\r\n\r\n        fields.forEach(field => {\r\n            const input = new InputField(field.id, field.type, field.placeholder);\r\n            this.formElement.appendChild(input.render());\r\n        });\r\n\r\n        const submitButton = new Button(\"Submit\", this.handleSubmit.bind(this));\r\n        this.formElement.appendChild(submitButton.render());\r\n    }\r\n\r\n    private async handleSubmit(event: Event) {\r\n        event.preventDefault();\r\n        if (Validation.validateForm(this.formElement)) {\r\n            const companyData = await API.fetchCompanyData();\r\n            console.log(\"Fetched Company Data:\", companyData);\r\n            alert(\"Registration successful!\");\r\n        }\r\n    }\r\n\r\n    public render(): HTMLElement {\r\n        return this.formElement;\r\n    }\r\n}", "export class Header {\r\n    private headerElement: HTMLElement;\r\n\r\n    constructor() {\r\n        this.headerElement = document.createElement(\"header\");\r\n        this.headerElement.className = \"bg-customGray text-black p-4 flex justify-between items-center\";\r\n        this.renderHeader();\r\n    }\r\n\r\n    private renderHeader() {\r\n        const leftItem = document.createElement(\"div\");\r\n        leftItem.className = \"text-xl font-bold\";\r\n        leftItem.textContent = \"English\";\r\n\r\n        const rightItem = document.createElement(\"div\");\r\n        rightItem.className = \"text-lg\";\r\n        rightItem.textContent = \"User Profile\";\r\n\r\n        this.headerElement.appendChild(leftItem);\r\n        this.headerElement.appendChild(rightItem);\r\n    }\r\n\r\n    public render(): HTMLElement {\r\n        return this.headerElement;\r\n    }\r\n}", "// filepath: /c:/Users/ahuevo nice/Desktop/Salamah Clone/src/main.ts\r\nimport { Form } from './components/Form';\r\nimport { Header } from './components/Header';\r\n//importing the styles\r\nimport '../styles/styles.css';\r\n\r\n\r\nconst app = document.getElementById(\"app\");\r\nif (app) {\r\n\r\n    const header = new Header();\r\n    app.appendChild(header.render());\r\n    \r\n    const registrationForm = new Form();\r\n    app.appendChild(registrationForm.render());\r\n}"],
  "mappings": "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",
  "names": []
}
